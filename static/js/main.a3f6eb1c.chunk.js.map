{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","serviceWorker.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","task","important","date","_this","error","handleTask","e","target","value","setState","handleCheck","handleDate","handleConfirm","_this$state","length","props","add","maxDate","this","react_default","a","createElement","className","type","name","id","placeholder","onChange","htmlFor","checked","min","max","onClick","Component","Task","active","style","color","text","planEndDate","done","delete","finishDate","TaskList","tasksactive","tasksdone","filterActive","activeAlphabetGrow","activeImportantGrow","activeEndDateGrow","filterDone","doneAlphabetGrow","donePlanEndGrow","doneEndDateGrow","activeTask","map","src_components_Task","key","doneTask","handleDelete","handlefilter","sort","b","handleDonefilter","prevProps","_this2","Fragment","background","transform","App","counter","tasks","handleAddTask","newTask","concat","Object","toConsumableArray","handleDoneTask","filter","handleDeleteTask","src_components_AddTask","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3f6eb1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddTask.css'\r\n\r\nclass AddTask extends Component {\r\n    minDate = new Date().toISOString().slice(0,10);\r\n\r\n    state = { \r\n        task: '',\r\n        important: false,\r\n        date: this.minDate,\r\n        error: false,\r\n    }\r\n\r\n    handleTask = (e) => {\r\n        const task = e.target.value;\r\n        this.setState({\r\n            task\r\n        })\r\n    }\r\n    \r\n    handleCheck = () => {\r\n        this.setState({\r\n            important: !this.state.important,\r\n        })\r\n    }\r\n\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            date: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleConfirm = () => {\r\n        const {task, important, date} = this.state;\r\n        if(this.state.task.length > 0){\r\n            this.props.add(task, important, date);\r\n            this.setState({\r\n                task: '',\r\n                important: false,\r\n                date: this.minDate,\r\n                error: false,\r\n            })\r\n        }else{\r\n            this.setState({\r\n                error: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const maxDate = this.minDate.slice(0,4) * 1 + 2 + '-12-31';\r\n        \r\n        return ( \r\n            <div className='addTask'>\r\n                <h2>Dodaj Zadanie</h2>\r\n                <div className='inputs'>\r\n                    <input type=\"text\" name=\"task\" id=\"task\"    placeholder='Wpisz zadanie' value={this.state.task} onChange={this.handleTask}/>\r\n                    <label htmlFor=\"important\">\r\n                    <input type=\"checkbox\" id='important' name='important' checked={this.state.important} onChange={this.handleCheck}/> Ważne\r\n                    </label>\r\n                    <label className='date' htmlFor=\"date\">\r\n                    Wybierz datę: <input type=\"date\" id='date' name='date' value={this.state.date} onChange={this.handleDate} min={this.minDate} max={maxDate}/>\r\n                    </label>\r\n                    <button onClick={this.handleConfirm}>Dodaj</button>\r\n                    {this.state.error && <p className='red'>Wpisz nazwę zadania</p>}\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\nimport \"./Task.css\"\r\n\r\nconst Task  = (props) => {\r\n    const style = {\r\n        color: 'rgb(255,100,100)'\r\n    }\r\n    \r\n    if(props.task.active){\r\n    return ( \r\n        <div className='task'>\r\n            <div className='text'>\r\n                <p><strong style={props.task.important ? style : null}>{props.task.text}</strong></p>\r\n                <p>Planowana data zakończenia - <b>{props.task.planEndDate}</b></p>\r\n            </div>\r\n            <div className='buttons'>\r\n                <button className='end' onClick={() => props.done(props.task.id)}>Zadanie zakończone</button>\r\n                <button className='delete' onClick={() => props.delete(props.task.id)}>Usuń zadanie</button>\r\n            </div>\r\n        </div>\r\n     );\r\n    }else{\r\n        return ( \r\n            <div className='done task'>\r\n                <div className='doneText'>\r\n                    <p><strong>{props.task.text}</strong></p>\r\n                    <p>Zakończono - {props.task.finishDate}</p>\r\n                    <p>Planowana data zakończenia - <b>{props.task.planEndDate}</b></p>\r\n                </div>\r\n                <div className='doneButtons'>\r\n                    <button className='doneDelete' onClick={() => props.delete(props.task.id)}>Usuń zadanie</button>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport Task from './Task'\r\nimport './App.css'\r\n\r\nclass TaskList extends Component {\r\n    state = {\r\n        active: this.props.tasksactive, \r\n        done: this.props.tasksdone,\r\n\r\n        filterActive: 'endDate',\r\n        activeAlphabetGrow: true,\r\n        activeImportantGrow: true,\r\n        activeEndDateGrow: true,\r\n\r\n        filterDone: 'endDate',\r\n        doneAlphabetGrow: true,\r\n        donePlanEndGrow: true,\r\n        doneEndDateGrow: true,\r\n    }\r\n\r\n    activeTask = this.state.active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n    doneTask = this.state.done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.handleDelete}/>);\r\n\r\n    componentWillUpdate(prevProps){\r\n        this.activeTask = this.state.active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n        this.doneTask = this.state.done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.handleDelete}/>);\r\n        if(prevProps.tasksactive !== this.state.active){\r\n            this.setState({\r\n                active: this.props.tasksactive,\r\n            })\r\n            this.activeTask = this.state.active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n        }\r\n        if(prevProps.tasksdone !== this.state.done){\r\n            this.setState({\r\n                done: this.props.tasksdone,\r\n            })\r\n            this.doneTask = this.state.done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.handleDelete}/>);\r\n        }\r\n    }\r\n        \r\n    handlefilter = (e) => {\r\n        const filterActive = e.target.name;\r\n        this.setState({\r\n            filterActive,\r\n        })\r\n\r\n        if(filterActive === 'alphabet'){\r\n            if(this.state.activeAlphabetGrow){\r\n            const active = this.state.active.sort((a,b) => {\r\n            a = a.text;\r\n            b = b.text;\r\n            if(a < b) return -1;\r\n            if(b < a) return 1;\r\n            return 0;\r\n        })\r\n        this.activeTask = active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n        this.setState({\r\n            activeAlphabetGrow: !this.state.activeAlphabetGrow\r\n        })\r\n        }else{\r\n            const active = this.state.active.sort((a,b) => {\r\n                a = a.text;\r\n                b = b.text;\r\n                if(a > b) return -1;\r\n                if(b > a) return 1;\r\n                return 0;\r\n            })\r\n            this.activeTask = active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n            this.setState({\r\n                activeAlphabetGrow: !this.state.activeAlphabetGrow\r\n            })\r\n        }\r\n        }\r\n        \r\n        if(filterActive === 'important'){\r\n            if(this.state.activeImportantGrow){\r\n                const active = this.state.active.sort((a,b) => {\r\n                a = a.important;\r\n                b = b.important;\r\n                if(a > b) return -1;\r\n                if(b > a) return 1;\r\n                return 0;\r\n                })\r\n                this.activeTask = active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n                this.setState({\r\n                activeImportantGrow: !this.state.activeImportantGrow,\r\n                })}\r\n            else{\r\n                const active = this.state.active.sort((a,b) => {\r\n                    a = a.important;\r\n                    b = b.important;\r\n                    if(a < b) return -1;\r\n                    if(b < a) return 1;\r\n                    return 0;\r\n                })\r\n                this.activeTask = active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n                this.setState({\r\n                activeImportantGrow: !this.state.activeImportantGrow,\r\n            })\r\n        }}\r\n\r\n        if(filterActive === 'endDate'){\r\n            if(this.state.activeEndDateGrow){\r\n            const active = this.state.active.sort((a,b) => {\r\n            a = a.planEndDate;\r\n            b = b.planEndDate;\r\n            if(a < b) return -1;\r\n            if(b < a) return 1;\r\n            return 0;\r\n        })\r\n        this.activeTask = active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n        this.setState({\r\n            activeEndDateGrow: !this.state.activeEndDateGrow,\r\n        })\r\n        }else{\r\n            const active = this.state.active.sort((a,b) => {\r\n                a = a.planEndDate;\r\n                b = b.planEndDate;\r\n                if(a > b) return -1;\r\n                if(b > a) return 1;\r\n                return 0;\r\n            })\r\n            this.activeTask = active.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n            this.setState({\r\n            activeEndDateGrow: !this.state.activeEndDateGrow,\r\n        })\r\n        }\r\n    }}\r\n\r\n    handleDonefilter = (e) => {\r\n        const filterDone = e.target.name;\r\n        this.setState({\r\n            filterDone,\r\n        })\r\n\r\n        if(filterDone === 'alphabet'){\r\n            if(this.state.doneAlphabetGrow){\r\n            const done = this.state.done.sort((a,b) => {\r\n            a = a.text;\r\n            b = b.text;\r\n            if(a < b) return -1;\r\n            if(b < a) return 1;\r\n            return 0;\r\n        })\r\n        this.doneTask = done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n        this.setState({\r\n            doneAlphabetGrow: !this.state.doneAlphabetGrow\r\n        })\r\n        }else{\r\n            const done = this.state.done.sort((a,b) => {\r\n                a = a.text;\r\n                b = b.text;\r\n                if(a > b) return -1;\r\n                if(b > a) return 1;\r\n                return 0;\r\n            })\r\n            this.doneTask = done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n            this.setState({\r\n                doneAlphabetGrow: !this.state.doneAlphabetGrow\r\n            })\r\n        }\r\n        }\r\n\r\n        \r\n        if(filterDone === 'planEnd'){\r\n            if(this.state.donePlanEndGrow){\r\n                const done = this.state.done.sort((a,b) => {\r\n                a = a.finishDate;\r\n                b = b.finishDate;\r\n                if(a > b) return -1;\r\n                if(b > a) return 1;\r\n                return 0;\r\n                })\r\n                this.doneTask = done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n                this.setState({\r\n                donePlanEndGrow: !this.state.donePlanEndGrow,\r\n                })}\r\n            else{\r\n                const done = this.state.done.sort((a,b) => {\r\n                    a = a.finishDate;\r\n                    b = b.finishDate;\r\n                    if(a < b) return -1;\r\n                    if(b < a) return 1;\r\n                    return 0;\r\n                })\r\n                this.doneTask = done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n                this.setState({\r\n                donePlanEndGrow: !this.state.donePlanEndGrow,\r\n            })\r\n        }}\r\n\r\n        if(filterDone === 'endDate'){\r\n            if(this.state.doneEndDateGrow){\r\n            const done = this.state.done.sort((a,b) => {\r\n            a = a.planEndDate;\r\n            b = b.planEndDate;\r\n            if(a < b) return -1;\r\n            if(b < a) return 1;\r\n            return 0;\r\n        })\r\n        this.doneTask = done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n        this.setState({\r\n            doneEndDateGrow: !this.state.doneEndDateGrow,\r\n        })\r\n        }else{\r\n            const done = this.state.done.sort((a,b) => {\r\n                a = a.planEndDate;\r\n                b = b.planEndDate;\r\n                if(a > b) return -1;\r\n                if(b > a) return 1;\r\n                return 0;\r\n            })\r\n            this.doneTask = done.map(task => <Task task={task} key={task.id} delete={this.props.delete} done={this.props.done}/>);\r\n            this.setState({\r\n            doneEndDateGrow: !this.state.doneEndDateGrow,\r\n        })\r\n        }\r\n    }}\r\n\r\n    render() {\r\n    return (\r\n        <> \r\n            <div className='container-tasks'>\r\n                <div className='container-active'>\r\n                    <h3>Zadania do wykonania</h3>\r\n                    <div className='tasks'>\r\n                        <div className='filter'>\r\n                            <p>Sortuj według: </p>\r\n                            <button name='endDate' style={this.state.filterActive === 'endDate' ? {background: 'rgb(255,150,150)'} : null} onClick={this.handlefilter}>daty zakończenia {this.state.filterActive==='endDate' ? <span style={!this.state.activeEndDateGrow ? null : {transform: 'rotate(180deg)'}}>^</span> : null}</button>\r\n                            <button name='important' style={this.state.filterActive === 'important' ? {background: 'rgb(255,150,150)'} : null} onClick={this.handlefilter}>ważnośći {this.state.filterActive==='important' ? <span style={!this.state.activeImportantGrow ? null : {transform: 'rotate(180deg)'}}>^</span> : null}</button>\r\n                            <button name='alphabet' style={this.state.filterActive === 'alphabet' || this.state.filterActive === 'alphabet decrease'  ? {background: 'rgb(255,150,150)'} : null} onClick={this.handlefilter}>alfabetycznie {this.state.filterActive==='alphabet' ? <span style={!this.state.activeAlphabetGrow ? null : {transform: 'rotate(180deg)'}}>^</span> : null}</button>\r\n                        </div>\r\n                        {this.activeTask}\r\n                        {this.activeTask.length < 1 ? <p className='noTask'>Brak aktywnych zadań</p> : null}\r\n                    </div>\r\n                </div>\r\n                <div className='container-done'>\r\n                    <h3>Zadania zakończone</h3>\r\n                    <div className='tasks'>\r\n                    <div className='filter'>\r\n                            <p>Sortuj według: </p>\r\n                            <button name='endDate' style={this.state.filterDone === 'endDate' ? {background: 'rgb(150,255,150)'} : null} onClick={this.handleDonefilter}>daty zakończenia {this.state.filterDone==='endDate' ? <span style={!this.state.doneEndDateGrow ? null : {transform: 'rotate(180deg)'}}>^</span> : null}</button>\r\n                            <button name='planEnd' style={this.state.filterDone === 'planEnd' ? {background: 'rgb(150,255,150)'} : null} onClick={this.handleDonefilter}>planowanej daty zakończenia {this.state.filterDone==='planEnd' ? <span style={!this.state.donePlanEndGrow ? null : {transform: 'rotate(180deg)'}}>^</span> : null}</button>\r\n                            <button name='alphabet' style={this.state.filterDone === 'alphabet' || this.state.filterDone === 'alphabet decrease'  ? {background: 'rgb(150,255,150)'} : null} onClick={this.handleDonefilter}>alfabetycznie {this.state.filterDone ==='alphabet' ? <span style={!this.state.doneAlphabetGrow ? null : {transform: 'rotate(180deg)'}}>^</span> : null}</button>\r\n                        </div>\r\n                        {this.doneTask}\r\n                        {this.doneTask.length < 1 ? <p className='noTask'>Brak zakończonych zadań</p> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}}\r\n\r\nexport default TaskList;    ","import React, { Component } from 'react';\nimport AddTask from './AddTask'\nimport TaskList from './TaskList'\n// import './App.css'\n\nclass App extends Component {\n  counter = 10;\n\n  state = { \n    tasks: [\n      {\n        id: 0,\n        text: 'zagrać',\n        active: true,\n        important: true,\n        finishDate: null,\n        planEndDate: '2020-07-06',\n      },\n      {\n        id: 1,\n        text: 'złamać',\n        active: true,\n        important: true,\n        finishDate: null,\n        planEndDate: '2020-05-06',\n      },\n      {\n        id: 2,\n        text: 'wygrać',\n        active: true,\n        important: false,\n        finishDate: null,\n        planEndDate: '2020-05-20',\n      },\n      {\n        id: 3,\n        text: 'jeździć',\n        active: false,\n        important: true,\n        finishDate: '2020-05-16',\n        planEndDate: '2020-05-15',\n      },\n    ]\n  }\n\n  handleAddTask = (text, important, date) => {\n    const newTask = {\n        id: this.counter,\n        text,\n        active: true,\n        important,\n        finishDate: null,\n        planEndDate: date,\n    }\n    let tasks = [...this.state.tasks, newTask]\n    this.setState({\n      tasks\n    })\n    this.counter++\n  }\n  \n  handleDoneTask = (id) => {\n    let date = new Date().toISOString();\n    date = date.slice(0,10);\n    let tasks = [...this.state.tasks];\n    tasks.filter(task => {\n      if(task.id === id){\n        task.active = false;\n        task.finishDate = date;\n      }\n    })\n    this.setState({\n      tasks,\n    })\n  }\n\n  handleDeleteTask = (id) => {\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter(task => task.id !== id);\n    this.setState({\n      tasks\n    })\n  }\n\n  render() { \n    return ( \n      <>\n        <h1>Aplikacja - ToDo</h1>\n        <AddTask add={this.handleAddTask}/>\n        <TaskList tasksactive={this.state.tasks.filter(task => task.active===true)} tasksdone={this.state.tasks.filter(task => task.active===false)} delete={this.handleDeleteTask} done={this.handleDoneTask}/>\n      </>\n    );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyApp from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MyApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}